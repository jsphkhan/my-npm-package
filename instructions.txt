My simple NPM package that I created to publish on NPM registry

This is a public NPM package - https://www.npmjs.com/package/@jsphkhan/my-npm-package
So you do not need a .npmrc to publish it. 
npmrc is needed to publish provate packages by mentioning the authToken

This is a scoped package - means I have scoped it to my NPM username to prevent conflicts
Eg. somebody else might have already published a package with same name.

I installed express as a dependency to test, when a project installs my package
where and how express is downloaded.


Publish a scoped public package
----------------------------------
https://docs.npmjs.com/creating-and-publishing-scoped-public-packages

npm init --scope=@my-username -> Sets up package.json
npm publish --access public -> for first time
npm publish -> next time onwards


Test package locally before publish
-------------------------------------
you can install the package locally inside your project

npm install --save /full_local_path_to_package
yarn add /full_local_path_to_package

Once you publish the packge you can use the usual npm/yarn commands to install


Unpublish a public page:
---------------------------
https://docs.npmjs.com/unpublishing-packages-from-the-registry

npm unpublish <package-name> -f


Versioning & Pushing to Github
--------------
https://docs.npmjs.com/about-semantic-versioning
https://tailordev.fr/blog/2018/03/15/automated-npm-releases-with-travis-ci/

npm version 1.1.0
or
npm version minor, npm version major, npm version patch
or npm version patch -m “auto comment” -> versioning with comment

This command performs the following tasks:
1. bump (update) the version number in package.json
2. create a new commit
3. create a git tag or a release.

Git push your changes to Github and create a new release TAG simultaneously: git push && git push --tags
Git push only tags: git push --tags


After that publish it to NPM directly: npm publish
If you are using Travis CI: see .travis.yml file
    Travis listens to Github repo events. Whenever a commit or tag is created, it will trigger a build. 
    Travis will publish to NPM repo only when a Github Tag is generated. This is to prevent unnecessary
    publish when developers make code commits. Only releases/tags need to be published


Semantic Versioning Best Practice
-----------------------------------
First release	New product	Start with 1.0.0	1.0.0
Backward compatible bug fixes	Patch release	Increment the third digit	1.0.1
Backward compatible new features	Minor release	Increment the middle digit and reset last digit to zero	1.1.0
Changes that break backward compatibility	Major release	Increment the first digit and reset middle and last digits to zero	2.0.0

Travis CI
--------------
We don’t want to deploy to NPM on every single commit. 
Instead we will use the git tag system and only deploy 
when we tag a commit as a new version. That leaves us 
free to push as many commits as we want and travis will 
run the CI against every one of them to make sure that 
the repo builds and the tests pass. However it will only 
trigger a deployment to NPM if a new tag is present on 
the commit and the continuous integration passes.

https://hungryturtlecode.com/projects/parallax-deploy-npm/

Sometimes Travis build does not start due to error in travis.yml file:
Check Travis YML error online - https://config.travis-ci.com/explore


Tests
---------
I am using JEST -> ./_tests
yarn test

Install JEST as dev dependencies: yarn add --dev jest

Code Coverage:
----------------
I am using JEST for Coverage

yarn coverage 


Setting up ESLint, Prettier, Husky, lint-staged
--------------------------------------------------
https://hungryturtlecode.com/projects/eslint-husky-parallax/


Setting up Babel to produce production dist
----------------------------------------------
https://medium.com/@imranhsayed/install-and-set-up-babel-for-your-project-a6ce1fc37633

@babel/core @babel/cli @babel/preset-env


Important
-------------
When somebody installs my package, the dev dependencies are not installed for him
Only dependencies will be downloaded

Pending
--------
Build package for production (./lib or ./dist folder) - done
Unit Test - done
Code coverage - done.
Use Travis CI to publish NPM package - done (Build error coming)
Add Github Actions to test PR - Pending
Add PR template for code review - Done - https://help.github.com/en/github/building-a-strong-community/creating-a-pull-request-template-for-your-repository


NPM has merged with Github, so from now packages can be published to Github
------------------------------------------------------------------------------
// Step 1: Use `publishConfig` option in your package.json
"publishConfig": { "registry": "https://npm.pkg.github.com/" }

// Step 2: Authenticate (you have to generate personal dev access token from inside Github)
$ npm login --registry=https://npm.pkg.github.com/

// Step 3: Publish
$ npm publish

Once you start publishing to Github packages, it does not publish to NPM registry. Because you have
modified the publish config to point to Github packages.



*** Note ***
-------------
I have published v2.4.6 on NPM package registry